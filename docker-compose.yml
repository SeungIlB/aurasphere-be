version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: aurasphere-backend-mysql
    env_file:
      - .env  # .env 파일 경로 수정
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      retries: 10
      timeout: 5s

  server:
    image: seungilbaek/aurasphere-server:latest
    container_name: aurasphere-backend-server
    env_file:
      - src/main/resources/.env
    ports:
      - "8080:8080"
    environment:
      DATASOURCE_URL: ${DATASOURCE_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    entrypoint: >
      sh -c '
      until mysqladmin ping -h aurasphere-backend-mysql -u${DB_USERNAME} -p${DB_PASSWORD} --silent; do
        echo "Waiting for MySQL to be ready...";
        sleep 5;
      done;
      echo "MySQL is ready! Starting server...";
      exec java -jar /app/libs/app.jar
      '
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      retries: 3
      timeout: 5s

  nginx:
    image: nginx:latest
    container_name: aurasphere-backend-nginx
    ports:
      - "80:80"
    networks:
      - app-network
    restart: always
    depends_on:
      server:
        condition: service_healthy

networks:
  app-network:
    driver: bridge